// üìÅ legal.component.ts
import { Component } from '@angular/core';

interface ChatMessage {
  role: 'user' | 'assistant';
  content: string;
}

@Component({
  selector: 'app-legal',
  templateUrl: './legal.component.html',
  styleUrls: ['./legal.component.css']
})
export class LegalComponent {
  activeTab: 'generate' | 'chat' = 'generate';

  analystName: string = '';
  analysisDate: string = '';

  templateText: string = '';
  agreementText: string = '';
  prompt: string = '';

  llmModel: string = 'llama3';
  temperature: number = 0.7;

  commentaryResult: string = '';
  isGenerating: boolean = false;

  chatInput: string = '';
  chatHistory: ChatMessage[] = [];

  switchTab(tab: 'generate' | 'chat') {
    if (tab === 'chat' && (!this.templateText || !this.agreementText)) return;
    this.activeTab = tab;
  }

  goBackToLanding() {
    if (confirm('End this analysis and return to home? All data will be lost.')) {
      window.location.href = '/';
    }
  }

  onFileUpload(event: any, target: 'template' | 'agreement') {
    const file = event.target.files[0];
    const reader = new FileReader();
    reader.onload = () => {
      if (target === 'template') this.templateText = reader.result as string;
      else this.agreementText = reader.result as string;
    };
    reader.readAsText(file);
  }

  generatePrompt() {
    this.prompt = `You are a legal analyst. Compare the following agreements.\n\nTemplate:\n${this.templateText}\n\nAgreement:\n${this.agreementText}`;
  }

  generateCommentary() {
    this.isGenerating = true;
    setTimeout(() => {
      this.commentaryResult = `**AI Generated Commentary**\n\nBased on the comparison, several clauses differ...`;
      this.isGenerating = false;
    }, 1000);
  }

  sendChat() {
    if (!this.chatInput.trim()) return;
    const msg: ChatMessage = { role: 'user', content: this.chatInput.trim() };
    this.chatHistory.push(msg);
    this.chatInput = '';

    setTimeout(() => {
      this.chatHistory.push({ role: 'assistant', content: 'This clause appears to differ from the template.' });
    }, 600);
  }

  clearChat() {
    this.chatHistory = [];
  }
} 




Here‚Äôs the full layout for your legal component:

---

### ‚úÖ `legal.component.html`

```html
<div class="container">
  <div class="header">
    <h2>Legal Document Analysis</h2>
    <button (click)="goBackToLanding()">‚Üê Back</button>
  </div>

  <div class="tabs">
    <button [class.active]="activeTab === 'generate'" (click)="switchTab('generate')">Generate Commentary</button>
    <button [class.active]="activeTab === 'chat'" [disabled]="!templateText || !agreementText" (click)="switchTab('chat')">Chat with Data</button>
  </div>

  <!-- ===================== Generate Commentary Tab ===================== -->
  <div *ngIf="activeTab === 'generate'" class="tab-content">
    <div class="upload-section">
      <div>
        <label>Template Document</label>
        <input type="file" (change)="onFileUpload($event, 'template')" />
      </div>
      <div>
        <label>Client Agreement</label>
        <input type="file" (change)="onFileUpload($event, 'agreement')" />
      </div>
    </div>

    <div class="doc-viewer">
      <textarea [value]="templateText" placeholder="Template Document..." readonly></textarea>
      <textarea [value]="agreementText" placeholder="Client Agreement..." readonly></textarea>
    </div>

    <div class="meta-inputs">
      <input type="text" [(ngModel)]="analystName" placeholder="Analyst Name" />
      <input type="date" [(ngModel)]="analysisDate" />
    </div>

    <button class="action-button" (click)="generatePrompt()">Generate Prompt</button>
    <textarea rows="6" [(ngModel)]="prompt" placeholder="Prompt will appear here..."></textarea>

    <div class="row-controls">
      <select [(ngModel)]="llmModel">
        <option value="llama3">LLaMA 3</option>
        <option value="gemma3-12b">Gemma 3:12B</option>
        <option value="gemma3-27b">Gemma 3:27B</option>
      </select>
      <input type="number" [(ngModel)]="temperature" min="0" max="1" step="0.1" />
      <button [disabled]="isGenerating || !commentaryResult">Download Output</button>
    </div>

    <button class="action-button" (click)="generateCommentary()" [disabled]="isGenerating">Generate Commentary</button>
    <div class="markdown-output" *ngIf="commentaryResult" [innerHTML]="commentaryResult | markdown"></div>
  </div>

  <!-- ===================== Chat Tab ===================== -->
  <div *ngIf="activeTab === 'chat'" class="tab-content chat-mode">
    <div class="split-pane">
      <div class="doc-summary">
        <h4>Document Comparison</h4>
        <div class="scroll-area">
          <h5>Template</h5>
          <pre>{{ templateText }}</pre>
          <h5>Agreement</h5>
          <pre>{{ agreementText }}</pre>
        </div>
      </div>

      <div class="chat-box">
        <div class="chat-controls">
          <select [(ngModel)]="llmModel">
            <option value="llama3">LLaMA 3</option>
            <option value="gemma3-12b">Gemma 3:12B</option>
            <option value="gemma3-27b">Gemma 3:27B</option>
          </select>
          <button (click)="clearChat()">Clear Chat</button>
        </div>

        <div class="chat-window">
          <div *ngFor="let msg of chatHistory" class="chat-message" [ngClass]="msg.role">
            <strong *ngIf="msg.role === 'user'">You:</strong>
            <strong *ngIf="msg.role === 'assistant'">AI:</strong>
            <span>{{ msg.content }}</span>
          </div>
        </div>

        <div class="chat-input">
          <input [(ngModel)]="chatInput" placeholder="Ask about the documents..." />
          <button (click)="sendChat()">Send</button>
        </div>
      </div>
    </div>
  </div>
</div>
```

---

### ‚úÖ `legal.component.css`

```css
.container {
  max-width: 1600px;
  margin: 0 auto;
  padding: 20px;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.tabs {
  margin-top: 20px;
  display: flex;
  gap: 10px;
}

.tabs button {
  padding: 8px 16px;
  border: none;
  background: #ddd;
  cursor: pointer;
}

.tabs button.active {
  background: #4285f4;
  color: white;
}

.tab-content {
  margin-top: 20px;
}

.upload-section {
  display: flex;
  gap: 40px;
}

.doc-viewer {
  display: flex;
  gap: 20px;
  margin-top: 15px;
}

.doc-viewer textarea {
  width: 50%;
  height: 200px;
  resize: vertical;
}

.meta-inputs {
  margin: 15px 0;
  display: flex;
  gap: 20px;
}

textarea {
  width: 100%;
  margin-top: 10px;
}

.row-controls {
  display: flex;
  gap: 10px;
  margin: 10px 0;
}

.action-button {
  margin-top: 15px;
  padding: 8px 20px;
  background: #4caf50;
  color: white;
  border: none;
  cursor: pointer;
}

.markdown-output {
  border: 1px solid #ccc;
  background: #f9f9f9;
  padding: 15px;
  margin-top: 10px;
  white-space: pre-wrap;
}

/* Chat section layout */
.chat-mode .split-pane {
  display: flex;
  gap: 20px;
}

.doc-summary {
  width: 40%;
}

.doc-summary .scroll-area {
  max-height: 500px;
  overflow: auto;
  background: #f4f4f4;
  padding: 10px;
}

.chat-box {
  width: 60%;
  display: flex;
  flex-direction: column;
}

.chat-controls {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10px;
}

.chat-window {
  flex-grow: 1;
  overflow-y: auto;
  max-height: 400px;
  border: 1px solid #ccc;
  padding: 10px;
  background: #fefefe;
}

.chat-message {
  margin-bottom: 10px;
}

.chat-message.user {
  text-align: right;
}

.chat-input {
  display: flex;
  gap: 10px;
  margin-top: 10px;
}
```

---

Would you like me to zip up or paste in `legal.module.ts`, route config, or test cases next?
