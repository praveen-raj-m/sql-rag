Awesome! ðŸŽ‰ Routing is working â€” weâ€™re in great shape.

---

## âœ… Next Step: Add Tab Layout to a Task Page

Letâ€™s start with the **Drawdown page**, and add:

* Two tabs:

  * **Generate Commentary**
  * **Chat with Data**
* Logic to switch tabs
* Placeholder content for now

---

### ðŸ“„ Step 1: Update `drawdown.component.ts` to Use `NgIf` and Tabs

Open:
ðŸ“„ `client/src/app/features/drawdown/drawdown.component.ts`

Update it like this:

```ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  standalone: true,
  selector: 'app-drawdown',
  imports: [CommonModule],
  templateUrl: './drawdown.component.html',
  styleUrls: ['./drawdown.component.scss']
})
export class DrawdownComponent {
  activeTab: 'commentary' | 'chat' = 'commentary';

  switchTab(tab: 'commentary' | 'chat') {
    this.activeTab = tab;
  }
}
```

---

### ðŸ“„ Step 2: Add Tabs in `drawdown.component.html`

```html
<div class="tab-selector">
  <button [class.active]="activeTab === 'commentary'" (click)="switchTab('commentary')">
    Generate Commentary
  </button>
  <button [class.active]="activeTab === 'chat'" (click)="switchTab('chat')">
    Chat with Data
  </button>
</div>

<div class="tab-content">
  <div *ngIf="activeTab === 'commentary'">
    <h2>Drawdown Commentary Form (Coming Soon)</h2>
  </div>

  <div *ngIf="activeTab === 'chat'">
    <h2>Drawdown Chat Window (Coming Soon)</h2>
  </div>
</div>
```

---

### ðŸŽ¨ Step 3: Add Tab Styling in `drawdown.component.scss`

```scss
.tab-selector {
  display: flex;
  gap: 1rem;
  margin-bottom: 1.5rem;

  button {
    padding: 0.75rem 1.5rem;
    border: none;
    background-color: #ddd;
    cursor: pointer;
    border-radius: 4px;
    font-weight: bold;

    &.active {
      background-color: #0a74da;
      color: white;
    }
  }
}

.tab-content {
  border-top: 1px solid #ccc;
  padding-top: 1.5rem;
}
```

---

### âœ… Final Test

1. Navigate to **Drawdown page** (`/drawdown`)
2. You should see:

   * Two buttons as tabs
   * Placeholder text changing when you click the tab

---

Once confirmed, weâ€™ll:

* Convert this tab UI into a **reusable shared component**
* Add real form fields to `Generate Commentary`
* Wire up `Chat with Data` tab with chat logic

Let me know once this works!
