import os
from flask import Blueprint, request, jsonify
from werkzeug.utils import secure_filename
import mammoth
import docx

legaldoc_bp = Blueprint('legaldoc', __name__)
UPLOAD_FOLDER = 'uploads'

def extract_text_from_docx(path):
    doc = docx.Document(path)
    return "\n".join([para.text for para in doc.paragraphs])

def extract_text_from_doc(path):
    with open(path, "rb") as doc_file:
        result = mammoth.extract_raw_text(doc_file)
        return result.value  # Plain text

@legaldoc_bp.route('/upload-one', methods=['POST'])
def upload_single_document():
    if 'file' not in request.files:
        return jsonify({'error': 'Missing file'}), 400

    file = request.files['file']
    filename = secure_filename(file.filename)
    filepath = os.path.join(UPLOAD_FOLDER, filename)

    os.makedirs(UPLOAD_FOLDER, exist_ok=True)
    file.save(filepath)

    try:
        if filename.lower().endswith('.docx'):
            text = extract_text_from_docx(filepath)
        elif filename.lower().endswith('.doc'):
            text = extract_text_from_doc(filepath)
        else:
            return jsonify({'error': 'Unsupported file format'}), 400
    except Exception as e:
        return jsonify({'error': f'Failed to extract text: {str(e)}'}), 500

    return jsonify({'text': text})
