Great — here’s a lightweight custom solution using the `marked` library and Angular’s `DomSanitizer`.

---

### ✅ Step 1: Install `marked`

Run:

```bash
npm install marked
```

---

### ✅ Step 2: Create the `MarkdownPipe`

Create a file: `src/app/shared/pipes/markdown.pipe.ts` (or place it next to your component):

```ts
import { Pipe, PipeTransform } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { marked } from 'marked';

@Pipe({
  name: 'markdown',
  standalone: true
})
export class MarkdownPipe implements PipeTransform {
  constructor(private sanitizer: DomSanitizer) {}

  transform(value: string): SafeHtml {
    const html = marked.parse(value || '');
    return this.sanitizer.bypassSecurityTrustHtml(html);
  }
}
```

---

### ✅ Step 3: Import Pipe in `legaldoc.component.ts`

Update your `@Component` decorator:

```ts
import { MarkdownPipe } from '../shared/pipes/markdown.pipe'; // adjust path if needed

@Component({
  standalone: true,
  selector: 'app-legaldoc',
  imports: [CommonModule, FormsModule, MarkdownPipe],
  templateUrl: './legaldoc.component.html',
  styleUrls: ['./legaldoc.component.css']
})
```

✅ You can now use `| markdown` in the template safely and efficiently.

Let me know if you'd like me to write a test case or fallback formatting for plain text.
